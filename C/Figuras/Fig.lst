

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Fri May 17 15:46:19 2019

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F887
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 5 "C:\PIC_PROGS\Microcontroladores\C\Figuras\Figuras.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 5 "C:\PIC_PROGS\Microcontroladores\C\Figuras\Figuras.c"
    45  2007  E0D4               	dw 0xFFFC & 0xFFF7 & 0xFFFF & 0xFFDF & 0xFFFF & 0xFFFF & 0xFCFF & 0xFBFF & 0xF7FF & 0xE
                                 FFF & 0xFFFF ;#
    46                           # 6 "C:\PIC_PROGS\Microcontroladores\C\Figuras\Figuras.c"
    47                           	psect config,class=CONFIG,delta=2 ;#
    48                           # 6 "C:\PIC_PROGS\Microcontroladores\C\Figuras\Figuras.c"
    49  2008  FFFF               	dw 0xFFFF & 0xFFFF ;#
    50                           	FNCALL	_main,_lcd_init
    51                           	FNCALL	_main,_lcd_clear
    52                           	FNCALL	_main,_lcd_puts
    53                           	FNCALL	_main,_pause
    54                           	FNCALL	_main,_lcd_goto
    55                           	FNCALL	_main,_lcd_putch
    56                           	FNCALL	_lcd_init,_pause
    57                           	FNCALL	_lcd_init,_lcd_write
    58                           	FNCALL	_lcd_init,_lcd_clear
    59                           	FNCALL	_lcd_putch,_lcd_write
    60                           	FNCALL	_lcd_goto,_lcd_write
    61                           	FNCALL	_lcd_puts,_lcd_write
    62                           	FNCALL	_lcd_clear,_lcd_write
    63                           	FNCALL	_lcd_clear,_pause
    64                           	FNCALL	_lcd_write,_pause
    65                           	FNCALL	_pause,_msecbase
    66                           	FNROOT	_main
    67                           	global	_fila
    68                           psect	strings,class=STRING,delta=2
    69                           global __pstrings
    70  0003                     __pstrings:
    71                           ;	global	stringdir,stringtab,__stringbase
    72  0003                     stringtab:
    73                           ;	String table - string pointers are 1 byte each
    74  0003                     stringcode:stringdir:
      + 0003                     stringdir:	
    75  0003  3000               movlw high(stringdir)
    76  0004  008A               movwf pclath
    77  0005  0804               movf fsr,w
    78  0006  0A84               incf fsr
    79  0007  0782               	addwf pc
    80  0008                     __stringbase:
    81  0008  3400               	retlw	0
    82                           psect	strings
    83                           	file	"C:\PIC_PROGS\Microcontroladores\C\Figuras\Figuras.c"
    84                           	line	11
    85  0009                     _fila:
    86  0009  3480               	retlw	080h
    87  000A  3400               	retlw	0
    88  000B  3400               	retlw	0
    89  000C  3400               	retlw	0
    90                           
    91  000D  3481               	retlw	081h
    92  000E  3400               	retlw	0
    93  000F  3400               	retlw	0
    94  0010  3400               	retlw	0
    95                           
    96  0011  3482               	retlw	082h
    97  0012  3400               	retlw	0
    98  0013  3400               	retlw	0
    99  0014  3400               	retlw	0
   100                           
   101  0015  3483               	retlw	083h
   102  0016  3400               	retlw	0
   103  0017  3400               	retlw	0
   104  0018  3400               	retlw	0
   105                           
   106  0019  3484               	retlw	084h
   107  001A  3400               	retlw	0
   108  001B  3400               	retlw	0
   109  001C  3400               	retlw	0
   110                           
   111  001D  3485               	retlw	085h
   112  001E  3400               	retlw	0
   113  001F  3400               	retlw	0
   114  0020  3400               	retlw	0
   115                           
   116  0021  3486               	retlw	086h
   117  0022  3400               	retlw	0
   118  0023  3400               	retlw	0
   119  0024  3400               	retlw	0
   120                           
   121  0025  3487               	retlw	087h
   122  0026  3400               	retlw	0
   123  0027  3400               	retlw	0
   124  0028  3400               	retlw	0
   125                           
   126  0029  3488               	retlw	088h
   127  002A  3400               	retlw	0
   128  002B  3400               	retlw	0
   129  002C  3400               	retlw	0
   130                           
   131  002D  3489               	retlw	089h
   132  002E  3400               	retlw	0
   133  002F  3400               	retlw	0
   134  0030  3400               	retlw	0
   135                           
   136  0031  348A               	retlw	08Ah
   137  0032  3400               	retlw	0
   138  0033  3400               	retlw	0
   139  0034  3400               	retlw	0
   140                           
   141  0035  348B               	retlw	08Bh
   142  0036  3400               	retlw	0
   143  0037  3400               	retlw	0
   144  0038  3400               	retlw	0
   145                           
   146  0039  348C               	retlw	08Ch
   147  003A  3400               	retlw	0
   148  003B  3400               	retlw	0
   149  003C  3400               	retlw	0
   150                           
   151  003D  348D               	retlw	08Dh
   152  003E  3400               	retlw	0
   153  003F  3400               	retlw	0
   154  0040  3400               	retlw	0
   155                           
   156  0041  348E               	retlw	08Eh
   157  0042  3400               	retlw	0
   158  0043  3400               	retlw	0
   159  0044  3400               	retlw	0
   160                           
   161  0045  348F               	retlw	08Fh
   162  0046  3400               	retlw	0
   163  0047  3400               	retlw	0
   164  0048  3400               	retlw	0
   165                           
   166  0049  34C0               	retlw	0C0h
   167  004A  3400               	retlw	0
   168  004B  3400               	retlw	0
   169  004C  3400               	retlw	0
   170                           
   171  004D  34C1               	retlw	0C1h
   172  004E  3400               	retlw	0
   173  004F  3400               	retlw	0
   174  0050  3400               	retlw	0
   175                           
   176  0051  34C2               	retlw	0C2h
   177  0052  3400               	retlw	0
   178  0053  3400               	retlw	0
   179  0054  3400               	retlw	0
   180                           
   181  0055  34C3               	retlw	0C3h
   182  0056  3400               	retlw	0
   183  0057  3400               	retlw	0
   184  0058  3400               	retlw	0
   185                           
   186  0059  34C4               	retlw	0C4h
   187  005A  3400               	retlw	0
   188  005B  3400               	retlw	0
   189  005C  3400               	retlw	0
   190                           
   191  005D  34C5               	retlw	0C5h
   192  005E  3400               	retlw	0
   193  005F  3400               	retlw	0
   194  0060  3400               	retlw	0
   195                           
   196  0061  34C6               	retlw	0C6h
   197  0062  3400               	retlw	0
   198  0063  3400               	retlw	0
   199  0064  3400               	retlw	0
   200                           
   201  0065  34C7               	retlw	0C7h
   202  0066  3400               	retlw	0
   203  0067  3400               	retlw	0
   204  0068  3400               	retlw	0
   205                           
   206  0069  34C8               	retlw	0C8h
   207  006A  3400               	retlw	0
   208  006B  3400               	retlw	0
   209  006C  3400               	retlw	0
   210                           
   211  006D  34C9               	retlw	0C9h
   212  006E  3400               	retlw	0
   213  006F  3400               	retlw	0
   214  0070  3400               	retlw	0
   215                           
   216  0071  34CA               	retlw	0CAh
   217  0072  3400               	retlw	0
   218  0073  3400               	retlw	0
   219  0074  3400               	retlw	0
   220                           
   221  0075  34CB               	retlw	0CBh
   222  0076  3400               	retlw	0
   223  0077  3400               	retlw	0
   224  0078  3400               	retlw	0
   225                           
   226  0079  34CC               	retlw	0CCh
   227  007A  3400               	retlw	0
   228  007B  3400               	retlw	0
   229  007C  3400               	retlw	0
   230                           
   231  007D  34CD               	retlw	0CDh
   232  007E  3400               	retlw	0
   233  007F  3400               	retlw	0
   234  0080  3400               	retlw	0
   235                           
   236  0081  34CE               	retlw	0CEh
   237  0082  3400               	retlw	0
   238  0083  3400               	retlw	0
   239  0084  3400               	retlw	0
   240                           
   241  0085  34CF               	retlw	0CFh
   242  0086  3400               	retlw	0
   243  0087  3400               	retlw	0
   244  0088  3400               	retlw	0
   245                           
   246                           	global	_fila
   247                           	global	_PORTD
   248  0008                     _PORTD	set	8
   249                           	global	_TMR0
   250  0001                     _TMR0	set	1
   251                           	global	_CARRY
   252  0018                     _CARRY	set	24
   253                           	global	_GIE
   254  005F                     _GIE	set	95
   255                           	global	_RA1
   256  0029                     _RA1	set	41
   257                           	global	_RA2
   258  002A                     _RA2	set	42
   259                           	global	_RA4
   260  002C                     _RA4	set	44
   261                           	global	_T0IF
   262  005A                     _T0IF	set	90
   263                           	global	_OPTION_REG
   264  0081                     _OPTION_REG	set	129
   265                           	global	_OSCCON
   266  008F                     _OSCCON	set	143
   267                           	global	_TRISA
   268  0085                     _TRISA	set	133
   269                           	global	_TRISC
   270  0087                     _TRISC	set	135
   271                           	global	_TRISD
   272  0088                     _TRISD	set	136
   273                           	global	_EEADR
   274  010D                     _EEADR	set	269
   275                           	global	_EEDATA
   276  010C                     _EEDATA	set	268
   277                           	global	_ANSEL
   278  0188                     _ANSEL	set	392
   279                           	global	_ANSELH
   280  0189                     _ANSELH	set	393
   281                           	global	_EECON1
   282  018C                     _EECON1	set	396
   283                           	global	_EECON2
   284  018D                     _EECON2	set	397
   285                           	global	_RD
   286  0C60                     _RD	set	3168
   287                           	global	_WR
   288  0C61                     _WR	set	3169
   289                           	global	_WREN
   290  0C62                     _WREN	set	3170
   291                           	
   292  0089                     STR_1:	
   293  0089  3449               	retlw	73	;'I'
   294  008A  346E               	retlw	110	;'n'
   295  008B  3469               	retlw	105	;'i'
   296  008C  3463               	retlw	99	;'c'
   297  008D  3469               	retlw	105	;'i'
   298  008E  346C               	retlw	108	;'l'
   299  008F  3469               	retlw	105	;'i'
   300  0090  347A               	retlw	122	;'z'
   301  0091  3461               	retlw	97	;'a'
   302  0092  346E               	retlw	110	;'n'
   303  0093  3464               	retlw	100	;'d'
   304  0094  346F               	retlw	111	;'o'
   305  0095  342E               	retlw	46	;'.'
   306  0096  342E               	retlw	46	;'.'
   307  0097  342E               	retlw	46	;'.'
   308  0098  3400               	retlw	0
   309                           psect	strings
   310                           	file	"Fig.as"
   311                           	line	#
   312                           psect cinit,class=CODE,delta=2
   313                           global start_initialization
   314  0668                     start_initialization:
   315                           
   316                           psect cinit,class=CODE,delta=2
   317                           global end_of_initialization
   318                           
   319                           ;End of C runtime variable initialization code
   320                           
   321  0668                     end_of_initialization:
   322  0668  0183               clrf status
   323  0669  120A  118A  2F5F   ljmp _main	;jump to C main() function
   324                           psect	cstackCOMMON,class=COMMON,space=1
   325                           global __pcstackCOMMON
   326  0070                     __pcstackCOMMON:
   327                           	global	?_lcd_init
   328  0070                     ?_lcd_init:	; 0 bytes @ 0x0
   329                           	global	?_lcd_clear
   330  0070                     ?_lcd_clear:	; 0 bytes @ 0x0
   331                           	global	?_lcd_puts
   332  0070                     ?_lcd_puts:	; 0 bytes @ 0x0
   333                           	global	?_pause
   334  0070                     ?_pause:	; 0 bytes @ 0x0
   335                           	global	?_lcd_goto
   336  0070                     ?_lcd_goto:	; 0 bytes @ 0x0
   337                           	global	?_lcd_putch
   338  0070                     ?_lcd_putch:	; 0 bytes @ 0x0
   339                           	global	?_main
   340  0070                     ?_main:	; 0 bytes @ 0x0
   341                           	global	?_lcd_write
   342  0070                     ?_lcd_write:	; 0 bytes @ 0x0
   343                           	global	?_msecbase
   344  0070                     ?_msecbase:	; 0 bytes @ 0x0
   345                           	global	??_msecbase
   346  0070                     ??_msecbase:	; 0 bytes @ 0x0
   347                           	global	pause@usvalue
   348  0070                     pause@usvalue:	; 2 bytes @ 0x0
   349  0070                     	ds	2
   350                           	global	??_pause
   351  0072                     ??_pause:	; 0 bytes @ 0x2
   352                           	global	pause@x
   353  0072                     pause@x:	; 2 bytes @ 0x2
   354  0072                     	ds	2
   355                           	global	??_lcd_write
   356  0074                     ??_lcd_write:	; 0 bytes @ 0x4
   357  0074                     	ds	1
   358                           	global	lcd_write@c
   359  0075                     lcd_write@c:	; 1 bytes @ 0x5
   360  0075                     	ds	1
   361                           	global	??_lcd_init
   362  0076                     ??_lcd_init:	; 0 bytes @ 0x6
   363                           	global	??_lcd_clear
   364  0076                     ??_lcd_clear:	; 0 bytes @ 0x6
   365                           	global	??_lcd_puts
   366  0076                     ??_lcd_puts:	; 0 bytes @ 0x6
   367                           	global	??_lcd_goto
   368  0076                     ??_lcd_goto:	; 0 bytes @ 0x6
   369                           	global	??_lcd_putch
   370  0076                     ??_lcd_putch:	; 0 bytes @ 0x6
   371                           	global	lcd_putch@c
   372  0076                     lcd_putch@c:	; 1 bytes @ 0x6
   373                           	global	lcd_goto@pos
   374  0076                     lcd_goto@pos:	; 1 bytes @ 0x6
   375  0076                     	ds	1
   376                           	global	lcd_puts@s
   377  0077                     lcd_puts@s:	; 1 bytes @ 0x7
   378                           	global	lcd_init@init_value
   379  0077                     lcd_init@init_value:	; 1 bytes @ 0x7
   380  0077                     	ds	1
   381                           	global	??_main
   382  0078                     ??_main:	; 0 bytes @ 0x8
   383  0078                     	ds	1
   384                           	global	main@i
   385  0079                     main@i:	; 1 bytes @ 0x9
   386  0079                     	ds	1
   387 ;;Data sizes: Strings 16, constant 128, data 0, bss 0, persistent 0 stack 0
   388 ;;Auto spaces:   Size  Autos    Used
   389 ;; COMMON          14     10      10
   390 ;; BANK0           80      0       0
   391 ;; BANK1           80      0       0
   392 ;; BANK3           96      0       0
   393 ;; BANK2           96      0       0
   394                           
   395 ;;
   396 ;; Pointer list with targets:
   397                           
   398 ;; lcd_puts@s	PTR const unsigned char  size(1) Largest target is 16
   399 ;;		 -> STR_1(CODE[16]), 
   400 ;;
   401                           
   402                           
   403 ;;
   404 ;; Critical Paths under _main in COMMON
   405 ;;
   406 ;;   _main->_lcd_init
   407 ;;   _main->_lcd_puts
   408 ;;   _lcd_init->_lcd_write
   409 ;;   _lcd_putch->_lcd_write
   410 ;;   _lcd_goto->_lcd_write
   411 ;;   _lcd_puts->_lcd_write
   412 ;;   _lcd_clear->_lcd_write
   413 ;;   _lcd_write->_pause
   414 ;;
   415 ;; Critical Paths under _main in BANK0
   416 ;;
   417 ;;   None.
   418 ;;
   419 ;; Critical Paths under _main in BANK1
   420 ;;
   421 ;;   None.
   422 ;;
   423 ;; Critical Paths under _main in BANK3
   424 ;;
   425 ;;   None.
   426 ;;
   427 ;; Critical Paths under _main in BANK2
   428 ;;
   429 ;;   None.
   430                           
   431 ;;
   432 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   433 ;;
   434                           
   435 ;;
   436 ;;Call Graph Tables:
   437 ;;
   438 ;; ---------------------------------------------------------------------------------
   439 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   440 ;; ---------------------------------------------------------------------------------
   441 ;; (0) _main                                                 2     2      0     645
   442 ;;                                              8 COMMON     2     2      0
   443 ;;                           _lcd_init
   444 ;;                          _lcd_clear
   445 ;;                           _lcd_puts
   446 ;;                              _pause
   447 ;;                           _lcd_goto
   448 ;;                          _lcd_putch
   449 ;; ---------------------------------------------------------------------------------
   450 ;; (1) _lcd_init                                             2     2      0     195
   451 ;;                                              6 COMMON     2     2      0
   452 ;;                              _pause
   453 ;;                          _lcd_write
   454 ;;                          _lcd_clear
   455 ;; ---------------------------------------------------------------------------------
   456 ;; (1) _lcd_putch                                            1     1      0      75
   457 ;;                                              6 COMMON     1     1      0
   458 ;;                          _lcd_write
   459 ;; ---------------------------------------------------------------------------------
   460 ;; (1) _lcd_goto                                             1     1      0      75
   461 ;;                                              6 COMMON     1     1      0
   462 ;;                          _lcd_write
   463 ;; ---------------------------------------------------------------------------------
   464 ;; (1) _lcd_puts                                             2     2      0      90
   465 ;;                                              6 COMMON     2     2      0
   466 ;;                          _lcd_write
   467 ;; ---------------------------------------------------------------------------------
   468 ;; (1) _lcd_clear                                            0     0      0      90
   469 ;;                          _lcd_write
   470 ;;                              _pause
   471 ;; ---------------------------------------------------------------------------------
   472 ;; (2) _lcd_write                                            2     2      0      60
   473 ;;                                              4 COMMON     2     2      0
   474 ;;                              _pause
   475 ;; ---------------------------------------------------------------------------------
   476 ;; (3) _pause                                                4     2      2      30
   477 ;;                                              0 COMMON     4     2      2
   478 ;;                           _msecbase
   479 ;; ---------------------------------------------------------------------------------
   480 ;; (4) _msecbase                                             0     0      0       0
   481 ;; ---------------------------------------------------------------------------------
   482 ;; Estimated maximum stack depth 4
   483 ;; ---------------------------------------------------------------------------------
   484                           
   485 ;; Call Graph Graphs:
   486                           
   487 ;; _main (ROOT)
   488 ;;   _lcd_init
   489 ;;     _pause
   490 ;;       _msecbase
   491 ;;     _lcd_write
   492 ;;       _pause
   493 ;;         _msecbase
   494 ;;     _lcd_clear
   495 ;;       _lcd_write
   496 ;;         _pause
   497 ;;           _msecbase
   498 ;;       _pause
   499 ;;         _msecbase
   500 ;;   _lcd_clear
   501 ;;     _lcd_write
   502 ;;       _pause
   503 ;;         _msecbase
   504 ;;     _pause
   505 ;;       _msecbase
   506 ;;   _lcd_puts
   507 ;;     _lcd_write
   508 ;;       _pause
   509 ;;         _msecbase
   510 ;;   _pause
   511 ;;     _msecbase
   512 ;;   _lcd_goto
   513 ;;     _lcd_write
   514 ;;       _pause
   515 ;;         _msecbase
   516 ;;   _lcd_putch
   517 ;;     _lcd_write
   518 ;;       _pause
   519 ;;         _msecbase
   520 ;;
   521                           
   522 ;; Address spaces:
   523                           
   524 ;;Name               Size   Autos  Total    Cost      Usage
   525 ;;BITCOMMON            E      0       0       0        0.0%
   526 ;;EEDATA             100      0       0       0        0.0%
   527 ;;NULL                 0      0       0       0        0.0%
   528 ;;CODE                 0      0       0       0        0.0%
   529 ;;COMMON               E      A       A       1       71.4%
   530 ;;BITSFR0              0      0       0       1        0.0%
   531 ;;SFR0                 0      0       0       1        0.0%
   532 ;;BITSFR1              0      0       0       2        0.0%
   533 ;;SFR1                 0      0       0       2        0.0%
   534 ;;STACK                0      0       5       2        0.0%
   535 ;;ABS                  0      0       0       3        0.0%
   536 ;;BITBANK0            50      0       0       4        0.0%
   537 ;;BITSFR3              0      0       0       4        0.0%
   538 ;;SFR3                 0      0       0       4        0.0%
   539 ;;BANK0               50      0       0       5        0.0%
   540 ;;BITSFR2              0      0       0       5        0.0%
   541 ;;SFR2                 0      0       0       5        0.0%
   542 ;;BITBANK1            50      0       0       6        0.0%
   543 ;;BANK1               50      0       0       7        0.0%
   544 ;;BITBANK3            60      0       0       8        0.0%
   545 ;;BANK3               60      0       0       9        0.0%
   546 ;;BITBANK2            60      0       0      10        0.0%
   547 ;;BANK2               60      0       0      11        0.0%
   548 ;;DATA                 0      0       0      12        0.0%
   549                           
   550                           	global	_main
   551                           psect	maintext,global,class=CODE,delta=2
   552                           global __pmaintext
   553  075F                     __pmaintext:
   554                           
   555 ;; *************** function _main *****************
   556 ;; Defined at:
   557 ;;		line 14 in file "C:\PIC_PROGS\Microcontroladores\C\Figuras\Figuras.c"
   558 ;; Parameters:    Size  Location     Type
   559 ;;		None
   560 ;; Auto vars:     Size  Location     Type
   561 ;;  i               1    9[COMMON] unsigned char 
   562 ;; Return value:  Size  Location     Type
   563 ;;		None               void
   564 ;; Registers used:
   565 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   566 ;; Tracked objects:
   567 ;;		On entry : 17F/0
   568 ;;		On exit  : 0/0
   569 ;;		Unchanged: 0/0
   570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   571 ;;      Params:         0       0       0       0       0
   572 ;;      Locals:         1       0       0       0       0
   573 ;;      Temps:          1       0       0       0       0
   574 ;;      Totals:         2       0       0       0       0
   575 ;;Total ram usage:        2 bytes
   576 ;; Hardware stack levels required when called:    5
   577 ;; This function calls:
   578 ;;		_lcd_init
   579 ;;		_lcd_clear
   580 ;;		_lcd_puts
   581 ;;		_pause
   582 ;;		_lcd_goto
   583 ;;		_lcd_putch
   584 ;; This function is called by:
   585 ;;		Startup code after reset
   586 ;; This function uses a non-reentrant model
   587 ;;
   588                           psect	maintext
   589                           	file	"C:\PIC_PROGS\Microcontroladores\C\Figuras\Figuras.c"
   590                           	line	14
   591                           	global	__size_of_main
   592  00A1                     	__size_of_main	equ	__end_of_main-_main
   593                           	
   594  075F                     _main:	
   595                           	opt	stack 3
   596                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   597                           	line	15
   598                           	
   599  075F                     l6256:	
   600                           ;Figuras.c: 15: OSCCON = 0x60;
   601  075F  3060               	movlw	(060h)
   602  0760  1683               	bsf	status, 5	;RP0=1, select bank1
   603  0761  1303               	bcf	status, 6	;RP1=0, select bank1
   604  0762  008F               	movwf	(143)^080h	;volatile
   605                           	line	17
   606                           	
   607  0763                     l6258:	
   608                           ;Figuras.c: 17: ANSEL = 0x00;
   609  0763  1683               	bsf	status, 5	;RP0=1, select bank3
   610  0764  1703               	bsf	status, 6	;RP1=1, select bank3
   611  0765  0188               	clrf	(392)^0180h	;volatile
   612                           	line	18
   613                           	
   614  0766                     l6260:	
   615                           ;Figuras.c: 18: ANSELH = 0x00;
   616  0766  0189               	clrf	(393)^0180h	;volatile
   617                           	line	19
   618                           	
   619  0767                     l6262:	
   620                           ;Figuras.c: 19: TRISD = 0x00;
   621  0767  1683               	bsf	status, 5	;RP0=1, select bank1
   622  0768  1303               	bcf	status, 6	;RP1=0, select bank1
   623  0769  0188               	clrf	(136)^080h	;volatile
   624                           	line	20
   625                           	
   626  076A                     l6264:	
   627                           ;Figuras.c: 20: TRISA = 0x00;
   628  076A  0185               	clrf	(133)^080h	;volatile
   629                           	line	21
   630                           	
   631  076B                     l6266:	
   632                           ;Figuras.c: 21: lcd_init();
   633  076B  120A  118A  2702   	fcall	_lcd_init
              120A  118A         
   634                           	line	22
   635                           	
   636  0770                     l6268:	
   637                           ;Figuras.c: 22: lcd_clear();
   638  0770  120A  118A  2691   	fcall	_lcd_clear
              120A  118A         
   639                           	line	23
   640                           	
   641  0775                     l6270:	
   642                           ;Figuras.c: 23: lcd_puts("Inicilizando...");
   643  0775  3081               	movlw	((STR_1-__stringbase))&0ffh
   644  0776  120A  118A  26DE   	fcall	_lcd_puts
              120A  118A         
   645                           	line	24
   646                           	
   647  077B                     l6272:	
   648                           ;Figuras.c: 24: pause(500);
   649  077B  30F4               	movlw	low(01F4h)
   650  077C  00F0               	movwf	(?_pause)
   651  077D  3001               	movlw	high(01F4h)
   652  077E  00F1               	movwf	((?_pause))+1
   653  077F  120A  118A  26A4   	fcall	_pause
              120A  118A         
   654                           	line	25
   655                           	
   656  0784                     l6274:	
   657                           ;Figuras.c: 25: lcd_clear();
   658  0784  120A  118A  2691   	fcall	_lcd_clear
              120A  118A         
   659  0789  2F8A               	goto	l6276
   660                           	line	27
   661                           ;Figuras.c: 27: while (1)
   662                           	
   663  078A                     l1039:	
   664                           	line	30
   665                           	
   666  078A                     l6276:	
   667                           ;Figuras.c: 28: {
   668                           ;Figuras.c: 29: char i;
   669                           ;Figuras.c: 30: for(i = 0;i <= 32;i++)
   670  078A  01F9               	clrf	(main@i)
   671                           	
   672  078B                     l6278:	
   673  078B  3021               	movlw	(021h)
   674  078C  0279               	subwf	(main@i),w
   675  078D  1C03               	skipc
   676  078E  2F90               	goto	u2261
   677  078F  2F91               	goto	u2260
   678  0790                     u2261:
   679  0790  2F93               	goto	l6282
   680  0791                     u2260:
   681  0791  2FC2               	goto	l1041
   682                           	
   683  0792                     l6280:	
   684  0792  2FC2               	goto	l1041
   685                           	line	31
   686                           	
   687  0793                     l1040:	
   688                           	line	32
   689                           	
   690  0793                     l6282:	
   691                           ;Figuras.c: 31: {
   692                           ;Figuras.c: 32: lcd_goto(fila[i]);
   693  0793  0879               	movf	(main@i),w
   694  0794  00F8               	movwf	(??_main+0)+0
   695  0795  3001               	movlw	(02h)-1
   696  0796                     u2275:
   697  0796  1003               	clrc
   698  0797  0DF8               	rlf	(??_main+0)+0,f
   699  0798  3EFF               	addlw	-1
   700  0799  1D03               	skipz
   701  079A  2F96               	goto	u2275
   702  079B  1003               	clrc
   703  079C  0D78               	rlf	(??_main+0)+0,w
   704  079D  3E01               	addlw	low((_fila-__stringbase))
   705  079E  0084               	movwf	fsr0
   706  079F  120A  118A  2003   	fcall	stringdir
              120A  118A         
   707  07A4  120A  118A  266C   	fcall	_lcd_goto
              120A  118A         
   708                           	line	33
   709                           	
   710  07A9                     l6284:	
   711                           ;Figuras.c: 33: lcd_putch(219);
   712  07A9  30DB               	movlw	(0DBh)
   713  07AA  120A  118A  2677   	fcall	_lcd_putch
              120A  118A         
   714                           	line	34
   715                           	
   716  07AF                     l6286:	
   717                           ;Figuras.c: 34: pause(250);
   718  07AF  30FA               	movlw	low(0FAh)
   719  07B0  00F0               	movwf	(?_pause)
   720  07B1  3000               	movlw	high(0FAh)
   721  07B2  00F1               	movwf	((?_pause))+1
   722  07B3  120A  118A  26A4   	fcall	_pause
              120A  118A         
   723                           	line	30
   724                           	
   725  07B8                     l6288:	
   726  07B8  3001               	movlw	(01h)
   727  07B9  00F8               	movwf	(??_main+0)+0
   728  07BA  0878               	movf	(??_main+0)+0,w
   729  07BB  07F9               	addwf	(main@i),f
   730                           	
   731  07BC                     l6290:	
   732  07BC  3021               	movlw	(021h)
   733  07BD  0279               	subwf	(main@i),w
   734  07BE  1C03               	skipc
   735  07BF  2FC1               	goto	u2281
   736  07C0  2FC2               	goto	u2280
   737  07C1                     u2281:
   738  07C1  2F93               	goto	l6282
   739  07C2                     u2280:
   740                           	
   741  07C2                     l1041:	
   742                           	line	37
   743                           ;Figuras.c: 35: }
   744                           ;Figuras.c: 37: for(i = 0;i <= 32;i++)
   745  07C2  01F9               	clrf	(main@i)
   746                           	
   747  07C3                     l6292:	
   748  07C3  3021               	movlw	(021h)
   749  07C4  0279               	subwf	(main@i),w
   750  07C5  1C03               	skipc
   751  07C6  2FC8               	goto	u2291
   752  07C7  2FC9               	goto	u2290
   753  07C8                     u2291:
   754  07C8  2FCB               	goto	l6296
   755  07C9                     u2290:
   756  07C9  2F8A               	goto	l6276
   757                           	
   758  07CA                     l6294:	
   759  07CA  2F8A               	goto	l6276
   760                           	line	38
   761                           	
   762  07CB                     l1042:	
   763                           	line	39
   764                           	
   765  07CB                     l6296:	
   766                           ;Figuras.c: 38: {
   767                           ;Figuras.c: 39: lcd_goto(fila[i]);
   768  07CB  0879               	movf	(main@i),w
   769  07CC  00F8               	movwf	(??_main+0)+0
   770  07CD  3001               	movlw	(02h)-1
   771  07CE                     u2305:
   772  07CE  1003               	clrc
   773  07CF  0DF8               	rlf	(??_main+0)+0,f
   774  07D0  3EFF               	addlw	-1
   775  07D1  1D03               	skipz
   776  07D2  2FCE               	goto	u2305
   777  07D3  1003               	clrc
   778  07D4  0D78               	rlf	(??_main+0)+0,w
   779  07D5  3E01               	addlw	low((_fila-__stringbase))
   780  07D6  0084               	movwf	fsr0
   781  07D7  120A  118A  2003   	fcall	stringdir
              120A  118A         
   782  07DC  120A  118A  266C   	fcall	_lcd_goto
              120A  118A         
   783                           	line	40
   784                           	
   785  07E1                     l6298:	
   786                           ;Figuras.c: 40: lcd_putch(32);
   787  07E1  3020               	movlw	(020h)
   788  07E2  120A  118A  2677   	fcall	_lcd_putch
              120A  118A         
   789                           	line	41
   790                           	
   791  07E7                     l6300:	
   792                           ;Figuras.c: 41: pause(250);
   793  07E7  30FA               	movlw	low(0FAh)
   794  07E8  00F0               	movwf	(?_pause)
   795  07E9  3000               	movlw	high(0FAh)
   796  07EA  00F1               	movwf	((?_pause))+1
   797  07EB  120A  118A  26A4   	fcall	_pause
              120A  118A         
   798                           	line	37
   799                           	
   800  07F0                     l6302:	
   801  07F0  3001               	movlw	(01h)
   802  07F1  00F8               	movwf	(??_main+0)+0
   803  07F2  0878               	movf	(??_main+0)+0,w
   804  07F3  07F9               	addwf	(main@i),f
   805                           	
   806  07F4                     l6304:	
   807  07F4  3021               	movlw	(021h)
   808  07F5  0279               	subwf	(main@i),w
   809  07F6  1C03               	skipc
   810  07F7  2FF9               	goto	u2311
   811  07F8  2FFA               	goto	u2310
   812  07F9                     u2311:
   813  07F9  2FCB               	goto	l6296
   814  07FA                     u2310:
   815  07FA  2F8A               	goto	l6276
   816                           	
   817  07FB                     l1043:	
   818  07FB  2F8A               	goto	l6276
   819                           	line	44
   820                           	
   821  07FC                     l1044:	
   822                           	line	27
   823  07FC  2F8A               	goto	l6276
   824                           	
   825  07FD                     l1045:	
   826                           	line	45
   827                           	
   828  07FD                     l1046:	
   829                           	global	start
   830  07FD  120A  118A  2800   	ljmp	start
   831                           	opt stack 0
   832                           GLOBAL	__end_of_main
   833  0800                     	__end_of_main:
   834 ;; =============== function _main ends ============
   835                           
   836                           	signat	_main,88
   837                           	global	_lcd_init
   838                           psect	text155,local,class=CODE,delta=2
   839                           global __ptext155
   840  0702                     __ptext155:
   841                           
   842 ;; *************** function _lcd_init *****************
   843 ;; Defined at:
   844 ;;		line 89 in file "C:\PIC_PROGS\Microcontroladores\C\PWM\lcd.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;		None
   847 ;; Auto vars:     Size  Location     Type
   848 ;;  init_value      1    7[COMMON] unsigned char 
   849 ;; Return value:  Size  Location     Type
   850 ;;		None               void
   851 ;; Registers used:
   852 ;;		wreg, status,2, status,0, pclath, cstack
   853 ;; Tracked objects:
   854 ;;		On entry : 0/0
   855 ;;		On exit  : 0/0
   856 ;;		Unchanged: 0/0
   857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   858 ;;      Params:         0       0       0       0       0
   859 ;;      Locals:         1       0       0       0       0
   860 ;;      Temps:          1       0       0       0       0
   861 ;;      Totals:         2       0       0       0       0
   862 ;;Total ram usage:        2 bytes
   863 ;; Hardware stack levels used:    1
   864 ;; Hardware stack levels required when called:    4
   865 ;; This function calls:
   866 ;;		_pause
   867 ;;		_lcd_write
   868 ;;		_lcd_clear
   869 ;; This function is called by:
   870 ;;		_main
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           psect	text155
   874                           	file	"C:\PIC_PROGS\Microcontroladores\C\PWM\lcd.c"
   875                           	line	89
   876                           	global	__size_of_lcd_init
   877  005D                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
   878                           	
   879  0702                     _lcd_init:	
   880                           	opt	stack 3
   881                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   882                           	line	94
   883                           	
   884  0702                     l6214:	
   885                           ;lcd.c: 90: char init_value;
   886                           ;lcd.c: 94: init_value = 0x3;
   887  0702  3003               	movlw	(03h)
   888  0703  00F6               	movwf	(??_lcd_init+0)+0
   889  0704  0876               	movf	(??_lcd_init+0)+0,w
   890  0705  00F7               	movwf	(lcd_init@init_value)
   891                           	line	95
   892                           	
   893  0706                     l6216:	
   894                           ;lcd.c: 95: TRISA=0;
   895  0706  1683               	bsf	status, 5	;RP0=1, select bank1
   896  0707  1303               	bcf	status, 6	;RP1=0, select bank1
   897  0708  0185               	clrf	(133)^080h	;volatile
   898                           	line	96
   899                           	
   900  0709                     l6218:	
   901                           ;lcd.c: 96: TRISC=0;
   902  0709  0187               	clrf	(135)^080h	;volatile
   903                           	line	97
   904                           	
   905  070A                     l6220:	
   906                           ;lcd.c: 97: RA2 = 0;
   907  070A  1283               	bcf	status, 5	;RP0=0, select bank0
   908  070B  1303               	bcf	status, 6	;RP1=0, select bank0
   909  070C  1105               	bcf	(42/8),(42)&7
   910                           	line	98
   911                           	
   912  070D                     l6222:	
   913                           ;lcd.c: 98: RA1 = 0;
   914  070D  1085               	bcf	(41/8),(41)&7
   915                           	line	99
   916                           	
   917  070E                     l6224:	
   918                           ;lcd.c: 99: RA4 = 0;
   919  070E  1205               	bcf	(44/8),(44)&7
   920                           	line	101
   921                           	
   922  070F                     l6226:	
   923                           ;lcd.c: 101: pause (15);
   924  070F  300F               	movlw	low(0Fh)
   925  0710  00F0               	movwf	(?_pause)
   926  0711  3000               	movlw	high(0Fh)
   927  0712  00F1               	movwf	((?_pause))+1
   928  0713  120A  118A  26A4   	fcall	_pause
              120A  118A         
   929                           	line	102
   930                           	
   931  0718                     l6228:	
   932                           ;lcd.c: 102: PORTD = init_value;
   933  0718  0877               	movf	(lcd_init@init_value),w
   934  0719  1283               	bcf	status, 5	;RP0=0, select bank0
   935  071A  1303               	bcf	status, 6	;RP1=0, select bank0
   936  071B  0088               	movwf	(8)	;volatile
   937                           	line	103
   938                           	
   939  071C                     l6230:	
   940                           ;lcd.c: 103: ((RA1 = 1),(RA1=0));
   941  071C  1485               	bsf	(41/8),(41)&7
   942                           	
   943  071D                     l6232:	
   944  071D  1085               	bcf	(41/8),(41)&7
   945                           	line	104
   946                           ;lcd.c: 104: pause(10);
   947  071E  300A               	movlw	low(0Ah)
   948  071F  00F0               	movwf	(?_pause)
   949  0720  3000               	movlw	high(0Ah)
   950  0721  00F1               	movwf	((?_pause))+1
   951  0722  120A  118A  26A4   	fcall	_pause
              120A  118A         
   952                           	line	105
   953                           	
   954  0727                     l6234:	
   955                           ;lcd.c: 105: ((RA1 = 1),(RA1=0));
   956  0727  1283               	bcf	status, 5	;RP0=0, select bank0
   957  0728  1303               	bcf	status, 6	;RP1=0, select bank0
   958  0729  1485               	bsf	(41/8),(41)&7
   959                           	
   960  072A                     l6236:	
   961  072A  1085               	bcf	(41/8),(41)&7
   962                           	line	106
   963                           ;lcd.c: 106: pause(10);
   964  072B  300A               	movlw	low(0Ah)
   965  072C  00F0               	movwf	(?_pause)
   966  072D  3000               	movlw	high(0Ah)
   967  072E  00F1               	movwf	((?_pause))+1
   968  072F  120A  118A  26A4   	fcall	_pause
              120A  118A         
   969                           	line	107
   970                           	
   971  0734                     l6238:	
   972                           ;lcd.c: 107: ((RA1 = 1),(RA1=0));
   973  0734  1283               	bcf	status, 5	;RP0=0, select bank0
   974  0735  1303               	bcf	status, 6	;RP1=0, select bank0
   975  0736  1485               	bsf	(41/8),(41)&7
   976                           	
   977  0737                     l6240:	
   978  0737  1085               	bcf	(41/8),(41)&7
   979                           	line	108
   980                           ;lcd.c: 108: pause(10);
   981  0738  300A               	movlw	low(0Ah)
   982  0739  00F0               	movwf	(?_pause)
   983  073A  3000               	movlw	high(0Ah)
   984  073B  00F1               	movwf	((?_pause))+1
   985  073C  120A  118A  26A4   	fcall	_pause
              120A  118A         
   986                           	line	109
   987                           	
   988  0741                     l6242:	
   989                           ;lcd.c: 109: PORTD = 2;
   990  0741  3002               	movlw	(02h)
   991  0742  1283               	bcf	status, 5	;RP0=0, select bank0
   992  0743  1303               	bcf	status, 6	;RP1=0, select bank0
   993  0744  0088               	movwf	(8)	;volatile
   994                           	line	110
   995                           	
   996  0745                     l6244:	
   997                           ;lcd.c: 110: ((RA1 = 1),(RA1=0));
   998  0745  1485               	bsf	(41/8),(41)&7
   999                           	
  1000  0746                     l6246:	
  1001  0746  1085               	bcf	(41/8),(41)&7
  1002                           	line	112
  1003                           	
  1004  0747                     l6248:	
  1005                           ;lcd.c: 112: lcd_write(0x28);
  1006  0747  3028               	movlw	(028h)
  1007  0748  120A  118A  26BF   	fcall	_lcd_write
              120A  118A         
  1008                           	line	113
  1009                           	
  1010  074D                     l6250:	
  1011                           ;lcd.c: 113: lcd_write(0xC);
  1012  074D  300C               	movlw	(0Ch)
  1013  074E  120A  118A  26BF   	fcall	_lcd_write
              120A  118A         
  1014                           	line	115
  1015                           	
  1016  0753                     l6252:	
  1017                           ;lcd.c: 115: lcd_clear();
  1018  0753  120A  118A  2691   	fcall	_lcd_clear
              120A  118A         
  1019                           	line	116
  1020                           	
  1021  0758                     l6254:	
  1022                           ;lcd.c: 116: lcd_write(0x6);
  1023  0758  3006               	movlw	(06h)
  1024  0759  120A  118A  26BF   	fcall	_lcd_write
              120A  118A         
  1025                           	line	117
  1026                           	
  1027  075E                     l1901:	
  1028  075E  0008               	return
  1029                           	opt stack 0
  1030                           GLOBAL	__end_of_lcd_init
  1031  075F                     	__end_of_lcd_init:
  1032 ;; =============== function _lcd_init ends ============
  1033                           
  1034                           	signat	_lcd_init,88
  1035                           	global	_lcd_putch
  1036                           psect	text156,local,class=CODE,delta=2
  1037                           global __ptext156
  1038  0677                     __ptext156:
  1039                           
  1040 ;; *************** function _lcd_putch *****************
  1041 ;; Defined at:
  1042 ;;		line 69 in file "C:\PIC_PROGS\Microcontroladores\C\PWM\lcd.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;  c               1    wreg     unsigned char 
  1045 ;; Auto vars:     Size  Location     Type
  1046 ;;  c               1    6[COMMON] unsigned char 
  1047 ;; Return value:  Size  Location     Type
  1048 ;;		None               void
  1049 ;; Registers used:
  1050 ;;		wreg, status,2, status,0, pclath, cstack
  1051 ;; Tracked objects:
  1052 ;;		On entry : 0/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1056 ;;      Params:         0       0       0       0       0
  1057 ;;      Locals:         1       0       0       0       0
  1058 ;;      Temps:          0       0       0       0       0
  1059 ;;      Totals:         1       0       0       0       0
  1060 ;;Total ram usage:        1 bytes
  1061 ;; Hardware stack levels used:    1
  1062 ;; Hardware stack levels required when called:    3
  1063 ;; This function calls:
  1064 ;;		_lcd_write
  1065 ;; This function is called by:
  1066 ;;		_main
  1067 ;; This function uses a non-reentrant model
  1068 ;;
  1069                           psect	text156
  1070                           	file	"C:\PIC_PROGS\Microcontroladores\C\PWM\lcd.c"
  1071                           	line	69
  1072                           	global	__size_of_lcd_putch
  1073  000B                     	__size_of_lcd_putch	equ	__end_of_lcd_putch-_lcd_putch
  1074                           	
  1075  0677                     _lcd_putch:	
  1076                           	opt	stack 4
  1077                           ; Regs used in _lcd_putch: [wreg+status,2+status,0+pclath+cstack]
  1078                           ;lcd_putch@c stored from wreg
  1079  0677  00F6               	movwf	(lcd_putch@c)
  1080                           	line	70
  1081                           	
  1082  0678                     l6210:	
  1083                           ;lcd.c: 70: RA2 = 1;
  1084  0678  1283               	bcf	status, 5	;RP0=0, select bank0
  1085  0679  1303               	bcf	status, 6	;RP1=0, select bank0
  1086  067A  1505               	bsf	(42/8),(42)&7
  1087                           	line	71
  1088                           	
  1089  067B                     l6212:	
  1090                           ;lcd.c: 71: lcd_write( c );
  1091  067B  0876               	movf	(lcd_putch@c),w
  1092  067C  120A  118A  26BF   	fcall	_lcd_write
              120A  118A         
  1093                           	line	72
  1094                           	
  1095  0681                     l1895:	
  1096  0681  0008               	return
  1097                           	opt stack 0
  1098                           GLOBAL	__end_of_lcd_putch
  1099  0682                     	__end_of_lcd_putch:
  1100 ;; =============== function _lcd_putch ends ============
  1101                           
  1102                           	signat	_lcd_putch,4216
  1103                           	global	_lcd_goto
  1104                           psect	text157,local,class=CODE,delta=2
  1105                           global __ptext157
  1106  066C                     __ptext157:
  1107                           
  1108 ;; *************** function _lcd_goto *****************
  1109 ;; Defined at:
  1110 ;;		line 81 in file "C:\PIC_PROGS\Microcontroladores\C\PWM\lcd.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;  pos             1    wreg     unsigned char 
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;  pos             1    6[COMMON] unsigned char 
  1115 ;; Return value:  Size  Location     Type
  1116 ;;		None               void
  1117 ;; Registers used:
  1118 ;;		wreg, status,2, status,0, pclath, cstack
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1124 ;;      Params:         0       0       0       0       0
  1125 ;;      Locals:         1       0       0       0       0
  1126 ;;      Temps:          0       0       0       0       0
  1127 ;;      Totals:         1       0       0       0       0
  1128 ;;Total ram usage:        1 bytes
  1129 ;; Hardware stack levels used:    1
  1130 ;; Hardware stack levels required when called:    3
  1131 ;; This function calls:
  1132 ;;		_lcd_write
  1133 ;; This function is called by:
  1134 ;;		_main
  1135 ;; This function uses a non-reentrant model
  1136 ;;
  1137                           psect	text157
  1138                           	file	"C:\PIC_PROGS\Microcontroladores\C\PWM\lcd.c"
  1139                           	line	81
  1140                           	global	__size_of_lcd_goto
  1141  000B                     	__size_of_lcd_goto	equ	__end_of_lcd_goto-_lcd_goto
  1142                           	
  1143  066C                     _lcd_goto:	
  1144                           	opt	stack 4
  1145                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  1146                           ;lcd_goto@pos stored from wreg
  1147  066C  00F6               	movwf	(lcd_goto@pos)
  1148                           	line	82
  1149                           	
  1150  066D                     l6206:	
  1151                           ;lcd.c: 82: RA2 = 0;
  1152  066D  1283               	bcf	status, 5	;RP0=0, select bank0
  1153  066E  1303               	bcf	status, 6	;RP1=0, select bank0
  1154  066F  1105               	bcf	(42/8),(42)&7
  1155                           	line	83
  1156                           	
  1157  0670                     l6208:	
  1158                           ;lcd.c: 83: lcd_write(pos);
  1159  0670  0876               	movf	(lcd_goto@pos),w
  1160  0671  120A  118A  26BF   	fcall	_lcd_write
              120A  118A         
  1161                           	line	84
  1162                           	
  1163  0676                     l1898:	
  1164  0676  0008               	return
  1165                           	opt stack 0
  1166                           GLOBAL	__end_of_lcd_goto
  1167  0677                     	__end_of_lcd_goto:
  1168 ;; =============== function _lcd_goto ends ============
  1169                           
  1170                           	signat	_lcd_goto,4216
  1171                           	global	_lcd_puts
  1172                           psect	text158,local,class=CODE,delta=2
  1173                           global __ptext158
  1174  06DE                     __ptext158:
  1175                           
  1176 ;; *************** function _lcd_puts *****************
  1177 ;; Defined at:
  1178 ;;		line 59 in file "C:\PIC_PROGS\Microcontroladores\C\PWM\lcd.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;  s               1    wreg     PTR const unsigned char 
  1181 ;;		 -> STR_1(16), 
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;  s               1    7[COMMON] PTR const unsigned char 
  1184 ;;		 -> STR_1(16), 
  1185 ;; Return value:  Size  Location     Type
  1186 ;;		None               void
  1187 ;; Registers used:
  1188 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1194 ;;      Params:         0       0       0       0       0
  1195 ;;      Locals:         1       0       0       0       0
  1196 ;;      Temps:          1       0       0       0       0
  1197 ;;      Totals:         2       0       0       0       0
  1198 ;;Total ram usage:        2 bytes
  1199 ;; Hardware stack levels used:    1
  1200 ;; Hardware stack levels required when called:    3
  1201 ;; This function calls:
  1202 ;;		_lcd_write
  1203 ;; This function is called by:
  1204 ;;		_main
  1205 ;; This function uses a non-reentrant model
  1206 ;;
  1207                           psect	text158
  1208                           	file	"C:\PIC_PROGS\Microcontroladores\C\PWM\lcd.c"
  1209                           	line	59
  1210                           	global	__size_of_lcd_puts
  1211  0024                     	__size_of_lcd_puts	equ	__end_of_lcd_puts-_lcd_puts
  1212                           	
  1213  06DE                     _lcd_puts:	
  1214                           	opt	stack 4
  1215                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1216                           ;lcd_puts@s stored from wreg
  1217  06DE  00F7               	movwf	(lcd_puts@s)
  1218                           	line	60
  1219                           	
  1220  06DF                     l6198:	
  1221                           ;lcd.c: 60: RA2 = 1;
  1222  06DF  1283               	bcf	status, 5	;RP0=0, select bank0
  1223  06E0  1303               	bcf	status, 6	;RP1=0, select bank0
  1224  06E1  1505               	bsf	(42/8),(42)&7
  1225                           	line	61
  1226                           ;lcd.c: 61: while(*s)
  1227  06E2  2EF4               	goto	l6204
  1228                           	
  1229  06E3                     l1890:	
  1230                           	line	62
  1231                           	
  1232  06E3                     l6200:	
  1233                           ;lcd.c: 62: lcd_write(*s++);
  1234  06E3  0877               	movf	(lcd_puts@s),w
  1235  06E4  0084               	movwf	fsr0
  1236  06E5  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1237  06EA  120A  118A  26BF   	fcall	_lcd_write
              120A  118A         
  1238                           	
  1239  06EF                     l6202:	
  1240  06EF  3001               	movlw	(01h)
  1241  06F0  00F6               	movwf	(??_lcd_puts+0)+0
  1242  06F1  0876               	movf	(??_lcd_puts+0)+0,w
  1243  06F2  07F7               	addwf	(lcd_puts@s),f
  1244  06F3  2EF4               	goto	l6204
  1245                           	
  1246  06F4                     l1889:	
  1247                           	line	61
  1248                           	
  1249  06F4                     l6204:	
  1250  06F4  0877               	movf	(lcd_puts@s),w
  1251  06F5  0084               	movwf	fsr0
  1252  06F6  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1253  06FB  3800               	iorlw	0
  1254  06FC  1D03               	skipz
  1255  06FD  2EFF               	goto	u2251
  1256  06FE  2F00               	goto	u2250
  1257  06FF                     u2251:
  1258  06FF  2EE3               	goto	l6200
  1259  0700                     u2250:
  1260  0700  2F01               	goto	l1892
  1261                           	
  1262  0701                     l1891:	
  1263                           	line	63
  1264                           	
  1265  0701                     l1892:	
  1266  0701  0008               	return
  1267                           	opt stack 0
  1268                           GLOBAL	__end_of_lcd_puts
  1269  0702                     	__end_of_lcd_puts:
  1270 ;; =============== function _lcd_puts ends ============
  1271                           
  1272                           	signat	_lcd_puts,4216
  1273                           	global	_lcd_clear
  1274                           psect	text159,local,class=CODE,delta=2
  1275                           global __ptext159
  1276  0691                     __ptext159:
  1277                           
  1278 ;; *************** function _lcd_clear *****************
  1279 ;; Defined at:
  1280 ;;		line 49 in file "C:\PIC_PROGS\Microcontroladores\C\PWM\lcd.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;		None
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;		None
  1285 ;; Return value:  Size  Location     Type
  1286 ;;		None               void
  1287 ;; Registers used:
  1288 ;;		wreg, status,2, status,0, pclath, cstack
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1294 ;;      Params:         0       0       0       0       0
  1295 ;;      Locals:         0       0       0       0       0
  1296 ;;      Temps:          0       0       0       0       0
  1297 ;;      Totals:         0       0       0       0       0
  1298 ;;Total ram usage:        0 bytes
  1299 ;; Hardware stack levels used:    1
  1300 ;; Hardware stack levels required when called:    3
  1301 ;; This function calls:
  1302 ;;		_lcd_write
  1303 ;;		_pause
  1304 ;; This function is called by:
  1305 ;;		_main
  1306 ;;		_lcd_init
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           psect	text159
  1310                           	file	"C:\PIC_PROGS\Microcontroladores\C\PWM\lcd.c"
  1311                           	line	49
  1312                           	global	__size_of_lcd_clear
  1313  0013                     	__size_of_lcd_clear	equ	__end_of_lcd_clear-_lcd_clear
  1314                           	
  1315  0691                     _lcd_clear:	
  1316                           	opt	stack 4
  1317                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  1318                           	line	50
  1319                           	
  1320  0691                     l6194:	
  1321                           ;lcd.c: 50: RA2 = 0;
  1322  0691  1283               	bcf	status, 5	;RP0=0, select bank0
  1323  0692  1303               	bcf	status, 6	;RP1=0, select bank0
  1324  0693  1105               	bcf	(42/8),(42)&7
  1325                           	line	51
  1326                           	
  1327  0694                     l6196:	
  1328                           ;lcd.c: 51: lcd_write(0x1);
  1329  0694  3001               	movlw	(01h)
  1330  0695  120A  118A  26BF   	fcall	_lcd_write
              120A  118A         
  1331                           	line	52
  1332                           ;lcd.c: 52: pause (2);
  1333  069A  3002               	movlw	low(02h)
  1334  069B  00F0               	movwf	(?_pause)
  1335  069C  3000               	movlw	high(02h)
  1336  069D  00F1               	movwf	((?_pause))+1
  1337  069E  120A  118A  26A4   	fcall	_pause
              120A  118A         
  1338                           	line	53
  1339                           	
  1340  06A3                     l1886:	
  1341  06A3  0008               	return
  1342                           	opt stack 0
  1343                           GLOBAL	__end_of_lcd_clear
  1344  06A4                     	__end_of_lcd_clear:
  1345 ;; =============== function _lcd_clear ends ============
  1346                           
  1347                           	signat	_lcd_clear,88
  1348                           	global	_lcd_write
  1349                           psect	text160,local,class=CODE,delta=2
  1350                           global __ptext160
  1351  06BF                     __ptext160:
  1352                           
  1353 ;; *************** function _lcd_write *****************
  1354 ;; Defined at:
  1355 ;;		line 34 in file "C:\PIC_PROGS\Microcontroladores\C\PWM\lcd.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;  c               1    wreg     unsigned char 
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;  c               1    5[COMMON] unsigned char 
  1360 ;; Return value:  Size  Location     Type
  1361 ;;		None               void
  1362 ;; Registers used:
  1363 ;;		wreg, status,2, status,0, pclath, cstack
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1369 ;;      Params:         0       0       0       0       0
  1370 ;;      Locals:         1       0       0       0       0
  1371 ;;      Temps:          1       0       0       0       0
  1372 ;;      Totals:         2       0       0       0       0
  1373 ;;Total ram usage:        2 bytes
  1374 ;; Hardware stack levels used:    1
  1375 ;; Hardware stack levels required when called:    2
  1376 ;; This function calls:
  1377 ;;		_pause
  1378 ;; This function is called by:
  1379 ;;		_lcd_clear
  1380 ;;		_lcd_puts
  1381 ;;		_lcd_putch
  1382 ;;		_lcd_goto
  1383 ;;		_lcd_init
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           psect	text160
  1387                           	file	"C:\PIC_PROGS\Microcontroladores\C\PWM\lcd.c"
  1388                           	line	34
  1389                           	global	__size_of_lcd_write
  1390  001F                     	__size_of_lcd_write	equ	__end_of_lcd_write-_lcd_write
  1391                           	
  1392  06BF                     _lcd_write:	
  1393                           	opt	stack 4
  1394                           ; Regs used in _lcd_write: [wreg+status,2+status,0+pclath+cstack]
  1395                           ;lcd_write@c stored from wreg
  1396  06BF  00F5               	movwf	(lcd_write@c)
  1397                           	line	35
  1398                           	
  1399  06C0                     l6180:	
  1400                           ;lcd.c: 35: pause (1);
  1401  06C0  3001               	movlw	low(01h)
  1402  06C1  00F0               	movwf	(?_pause)
  1403  06C2  3000               	movlw	high(01h)
  1404  06C3  00F1               	movwf	((?_pause))+1
  1405  06C4  120A  118A  26A4   	fcall	_pause
              120A  118A         
  1406                           	line	36
  1407                           	
  1408  06C9                     l6182:	
  1409                           ;lcd.c: 36: PORTD = ( ( c >> 4 ) & 0x0F );
  1410  06C9  0875               	movf	(lcd_write@c),w
  1411  06CA  00F4               	movwf	(??_lcd_write+0)+0
  1412  06CB  3004               	movlw	04h
  1413  06CC                     u2245:
  1414  06CC  1003               	clrc
  1415  06CD  0CF4               	rrf	(??_lcd_write+0)+0,f
  1416  06CE  3EFF               	addlw	-1
  1417  06CF  1D03               	skipz
  1418  06D0  2ECC               	goto	u2245
  1419  06D1  0874               	movf	0+(??_lcd_write+0)+0,w
  1420  06D2  390F               	andlw	0Fh
  1421  06D3  1283               	bcf	status, 5	;RP0=0, select bank0
  1422  06D4  1303               	bcf	status, 6	;RP1=0, select bank0
  1423  06D5  0088               	movwf	(8)	;volatile
  1424                           	line	37
  1425                           	
  1426  06D6                     l6184:	
  1427                           ;lcd.c: 37: ((RA1 = 1),(RA1=0));
  1428  06D6  1485               	bsf	(41/8),(41)&7
  1429                           	
  1430  06D7                     l6186:	
  1431  06D7  1085               	bcf	(41/8),(41)&7
  1432                           	line	38
  1433                           	
  1434  06D8                     l6188:	
  1435                           ;lcd.c: 38: PORTD = ( c & 0x0F );
  1436  06D8  0875               	movf	(lcd_write@c),w
  1437  06D9  390F               	andlw	0Fh
  1438  06DA  0088               	movwf	(8)	;volatile
  1439                           	line	39
  1440                           	
  1441  06DB                     l6190:	
  1442                           ;lcd.c: 39: ((RA1 = 1),(RA1=0));
  1443  06DB  1485               	bsf	(41/8),(41)&7
  1444                           	
  1445  06DC                     l6192:	
  1446  06DC  1085               	bcf	(41/8),(41)&7
  1447                           	line	41
  1448                           	
  1449  06DD                     l1883:	
  1450  06DD  0008               	return
  1451                           	opt stack 0
  1452                           GLOBAL	__end_of_lcd_write
  1453  06DE                     	__end_of_lcd_write:
  1454 ;; =============== function _lcd_write ends ============
  1455                           
  1456                           	signat	_lcd_write,4216
  1457                           	global	_pause
  1458                           psect	text161,local,class=CODE,delta=2
  1459                           global __ptext161
  1460  06A4                     __ptext161:
  1461                           
  1462 ;; *************** function _pause *****************
  1463 ;; Defined at:
  1464 ;;		line 10 in file "C:\PIC_PROGS\Microcontroladores\C\PWM\pause.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;  usvalue         2    0[COMMON] unsigned short 
  1467 ;; Auto vars:     Size  Location     Type
  1468 ;;  x               2    2[COMMON] unsigned short 
  1469 ;; Return value:  Size  Location     Type
  1470 ;;		None               void
  1471 ;; Registers used:
  1472 ;;		wreg, status,2, status,0, pclath, cstack
  1473 ;; Tracked objects:
  1474 ;;		On entry : 0/0
  1475 ;;		On exit  : 0/0
  1476 ;;		Unchanged: 0/0
  1477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1478 ;;      Params:         2       0       0       0       0
  1479 ;;      Locals:         2       0       0       0       0
  1480 ;;      Temps:          0       0       0       0       0
  1481 ;;      Totals:         4       0       0       0       0
  1482 ;;Total ram usage:        4 bytes
  1483 ;; Hardware stack levels used:    1
  1484 ;; Hardware stack levels required when called:    1
  1485 ;; This function calls:
  1486 ;;		_msecbase
  1487 ;; This function is called by:
  1488 ;;		_main
  1489 ;;		_lcd_write
  1490 ;;		_lcd_clear
  1491 ;;		_lcd_init
  1492 ;; This function uses a non-reentrant model
  1493 ;;
  1494                           psect	text161
  1495                           	file	"C:\PIC_PROGS\Microcontroladores\C\PWM\pause.c"
  1496                           	line	10
  1497                           	global	__size_of_pause
  1498  001B                     	__size_of_pause	equ	__end_of_pause-_pause
  1499                           	
  1500  06A4                     _pause:	
  1501                           	opt	stack 4
  1502                           ; Regs used in _pause: [wreg+status,2+status,0+pclath+cstack]
  1503                           	line	13
  1504                           	
  1505  06A4                     l6172:	
  1506                           ;pause.c: 11: unsigned short x;
  1507                           ;pause.c: 13: for (x=0; x<=usvalue; x++)
  1508  06A4  01F2               	clrf	(pause@x)
  1509  06A5  01F3               	clrf	(pause@x+1)
  1510  06A6  2EB3               	goto	l6178
  1511                           	line	14
  1512                           	
  1513  06A7                     l3957:	
  1514                           	line	15
  1515                           	
  1516  06A7                     l6174:	
  1517                           ;pause.c: 14: {
  1518                           ;pause.c: 15: msecbase();
  1519  06A7  120A  118A  2682   	fcall	_msecbase
              120A  118A         
  1520                           	line	13
  1521                           	
  1522  06AC                     l6176:	
  1523  06AC  3001               	movlw	low(01h)
  1524  06AD  07F2               	addwf	(pause@x),f
  1525  06AE  1803               	skipnc
  1526  06AF  0AF3               	incf	(pause@x+1),f
  1527  06B0  3000               	movlw	high(01h)
  1528  06B1  07F3               	addwf	(pause@x+1),f
  1529  06B2  2EB3               	goto	l6178
  1530                           	
  1531  06B3                     l3956:	
  1532                           	
  1533  06B3                     l6178:	
  1534  06B3  0873               	movf	(pause@x+1),w
  1535  06B4  0271               	subwf	(pause@usvalue+1),w
  1536  06B5  1D03               	skipz
  1537  06B6  2EB9               	goto	u2235
  1538  06B7  0872               	movf	(pause@x),w
  1539  06B8  0270               	subwf	(pause@usvalue),w
  1540  06B9                     u2235:
  1541  06B9  1803               	skipnc
  1542  06BA  2EBC               	goto	u2231
  1543  06BB  2EBD               	goto	u2230
  1544  06BC                     u2231:
  1545  06BC  2EA7               	goto	l6174
  1546  06BD                     u2230:
  1547  06BD  2EBE               	goto	l3959
  1548                           	
  1549  06BE                     l3958:	
  1550                           	line	17
  1551                           	
  1552  06BE                     l3959:	
  1553  06BE  0008               	return
  1554                           	opt stack 0
  1555                           GLOBAL	__end_of_pause
  1556  06BF                     	__end_of_pause:
  1557 ;; =============== function _pause ends ============
  1558                           
  1559                           	signat	_pause,4216
  1560                           	global	_msecbase
  1561                           psect	text162,local,class=CODE,delta=2
  1562                           global __ptext162
  1563  0682                     __ptext162:
  1564                           
  1565 ;; *************** function _msecbase *****************
  1566 ;; Defined at:
  1567 ;;		line 24 in file "C:\PIC_PROGS\Microcontroladores\C\PWM\msecbase.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;		None
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;		None
  1572 ;; Return value:  Size  Location     Type
  1573 ;;		None               void
  1574 ;; Registers used:
  1575 ;;		wreg
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1581 ;;      Params:         0       0       0       0       0
  1582 ;;      Locals:         0       0       0       0       0
  1583 ;;      Temps:          0       0       0       0       0
  1584 ;;      Totals:         0       0       0       0       0
  1585 ;;Total ram usage:        0 bytes
  1586 ;; Hardware stack levels used:    1
  1587 ;; This function calls:
  1588 ;;		Nothing
  1589 ;; This function is called by:
  1590 ;;		_pause
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           psect	text162
  1594                           	file	"C:\PIC_PROGS\Microcontroladores\C\PWM\msecbase.c"
  1595                           	line	24
  1596                           	global	__size_of_msecbase
  1597  000F                     	__size_of_msecbase	equ	__end_of_msecbase-_msecbase
  1598                           	
  1599  0682                     _msecbase:	
  1600                           	opt	stack 4
  1601                           ; Regs used in _msecbase: [wreg]
  1602                           	line	25
  1603                           	
  1604  0682                     l5312:	
  1605                           ;msecbase.c: 25: OPTION_REG = 0b00000001;
  1606  0682  3001               	movlw	(01h)
  1607  0683  1683               	bsf	status, 5	;RP0=1, select bank1
  1608  0684  1303               	bcf	status, 6	;RP1=0, select bank1
  1609  0685  0081               	movwf	(129)^080h	;volatile
  1610                           	line	26
  1611                           ;msecbase.c: 26: TMR0 = 0xD;
  1612  0686  300D               	movlw	(0Dh)
  1613  0687  1283               	bcf	status, 5	;RP0=0, select bank0
  1614  0688  1303               	bcf	status, 6	;RP1=0, select bank0
  1615  0689  0081               	movwf	(1)	;volatile
  1616                           	line	27
  1617                           ;msecbase.c: 27: while(!T0IF);
  1618  068A  2E8B               	goto	l2926
  1619                           	
  1620  068B                     l2927:	
  1621                           	
  1622  068B                     l2926:	
  1623  068B  1D0B               	btfss	(90/8),(90)&7
  1624  068C  2E8E               	goto	u11
  1625  068D  2E8F               	goto	u10
  1626  068E                     u11:
  1627  068E  2E8B               	goto	l2926
  1628  068F                     u10:
  1629                           	
  1630  068F                     l2928:	
  1631                           	line	28
  1632                           ;msecbase.c: 28: T0IF = 0;
  1633  068F  110B               	bcf	(90/8),(90)&7
  1634                           	line	29
  1635                           	
  1636  0690                     l2929:	
  1637  0690  0008               	return
  1638                           	opt stack 0
  1639                           GLOBAL	__end_of_msecbase
  1640  0691                     	__end_of_msecbase:
  1641 ;; =============== function _msecbase ends ============
  1642                           
  1643                           	signat	_msecbase,88
  1644                           psect	text163,local,class=CODE,delta=2
  1645                           global __ptext163
  1646  0000                     __ptext163:
  1647                           	global	btemp
  1648  007E                     	btemp set 07Eh
  1649                           
  1650                           	DABS	1,126,2	;btemp
  1651                           	global	wtemp0
  1652  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Fri May 17 15:46:19 2019

                   pc 0002                    _RD 0C60                    u10 068F                    u11 068E  
                  _WR 0C61                    fsr 0004                   _GIE 005F                   _RA1 0029  
                 _RA2 002A                   _RA4 002C                   fsr0 0004           lcd_goto@pos 0076  
                l1040 0793                  l1041 07C2                  l1042 07CB                  l1043 07FB  
                l1044 07FC                  l1045 07FD                  l1046 07FD                  l1039 078A  
                l1901 075E                  l5312 0682                  l6200 06E3                  l6202 06EF  
                l1890 06E3                  l6210 0678                  l1883 06DD                  l1891 0701  
                l1892 0701                  l6204 06F4                  l6212 067B                  l6220 070A  
                l6300 07E7                  l2926 068B                  l1886 06A3                  l6206 066D  
                l6230 071C                  l6222 070D                  l6214 0702                  l6302 07F0  
                l2927 068B                  l1895 0681                  l2928 068F                  l6208 0670  
                l6240 0737                  l6232 071D                  l6224 070E                  l6216 0706  
                l6304 07F4                  l2929 0690                  l1889 06F4                  l1898 0676  
                l6250 074D                  l6242 0741                  l6234 0727                  l6226 070F  
                l6218 0709                  l6172 06A4                  l6180 06C0                  l6252 0753  
                l6244 0745                  l6236 072A                  l6228 0718                  l6260 0766  
                l6174 06A7                  l6190 06DB                  l6182 06C9                  l6254 0758  
                l6246 0746                  l6238 0734                  l6270 0775                  l6262 0767  
                l6176 06AC                  l6192 06DC                  l6184 06D6                  l6248 0747  
                l6280 0792                  l6272 077B                  l6264 076A                  l6256 075F  
                l6178 06B3                  l6186 06D7                  l6194 0691                  l6290 07BC  
                l6282 0793                  l6274 0784                  l6266 076B                  l6258 0763  
                l3956 06B3                  l6188 06D8                  l6196 0694                  l6292 07C3  
                l6284 07A9                  l6276 078A                  l6268 0770                  l3957 06A7  
                l3958 06BE                  l6198 06DF                  l6294 07CA                  l6286 07AF  
                l6278 078B                  l3959 06BE                  l6296 07CB                  l6288 07B8  
                l6298 07E1                  STR_1 0089                  _T0IF 005A                  u2230 06BD  
                u2310 07FA                  u2231 06BC                  u2311 07F9                  u2305 07CE  
                u2250 0700                  u2235 06B9                  u2251 06FF                  u2260 0791  
                u2245 06CC                  u2261 0790                  u2280 07C2                  u2281 07C1  
                u2290 07C9                  u2291 07C8                  u2275 0796                  _TMR0 0001  
                _WREN 0C62                  _fila 0009                  _main 075F                  btemp 007E  
                start 0000                 ?_main 0070                 _EEADR 010D                 _CARRY 0018  
               _ANSEL 0188                 _PORTD 0008                 _TRISA 0085                 _TRISC 0087  
               _TRISD 0088                 _pause 06A4                 main@i 0079                 pclath 000A  
               status 0003                 wtemp0 007E          __end_of_main 0800                ??_main 0078  
              _EEDATA 010C                ?_pause 0070                _EECON1 018C                _EECON2 018D  
              _ANSELH 0189                _OSCCON 008F      __end_of_lcd_init 075F      __end_of_lcd_goto 0677  
    __end_of_lcd_puts 0702      __end_of_msecbase 0691                pause@x 0072        __pcstackCOMMON 0070  
       __end_of_pause 06BF    __size_of_lcd_clear 0013    __size_of_lcd_putch 000B    __size_of_lcd_write 001F  
             ??_pause 0072            __pmaintext 075F             ?_lcd_init 0070             ?_lcd_goto 0070  
           ?_lcd_puts 0070             ?_msecbase 0070     __end_of_lcd_clear 06A4     __end_of_lcd_putch 0682  
   __end_of_lcd_write 06DE            ??_lcd_init 0076            ??_lcd_goto 0076            ??_lcd_puts 0076  
end_of_initialization 0668            ??_msecbase 0070            lcd_putch@c 0076            lcd_write@c 0075  
 start_initialization 0668    lcd_init@init_value 0077          pause@usvalue 0070     __size_of_lcd_init 005D  
   __size_of_lcd_goto 000B     __size_of_lcd_puts 0024     __size_of_msecbase 000F             __ptext160 06BF  
           __ptext161 06A4             __ptext162 0682             __ptext163 0000             __ptext155 0702  
           __ptext156 0677             __ptext157 066C             __ptext158 06DE             __ptext159 0691  
           _lcd_clear 0691             __pstrings 0003             _lcd_putch 0677             _lcd_write 06BF  
      __size_of_pause 001B            ?_lcd_clear 0070            ?_lcd_putch 0070           __stringbase 0008  
          ?_lcd_write 0070             lcd_puts@s 0077              _lcd_init 0702              _lcd_goto 066C  
            _lcd_puts 06DE         __size_of_main 00A1              _msecbase 0682           ??_lcd_clear 0076  
         ??_lcd_putch 0076           ??_lcd_write 0074             stringcode 0003            _OPTION_REG 0081  
            stringdir 0003              stringtab 0003  
